# Generated by Django 3.2.9 on 2021-11-18 10:08

from django.db import migrations, models
import django.db.models.deletion
from django.db.models import Count, Subquery, OuterRef


def forwards_func(apps, schema_editor):
    """Converts the reverse m2m (that i fact never has more than one relation) to a foreign key"""
    Task = apps.get_model('agendjang', "Task")
    DateRange = apps.get_model('agendjang', "DateRange")
    DateRange.objects.filter(task=None).delete()  # Removing existing DateRange that are not linked to any Task
    # The "task" argument refers to the reverse of "many_dateranges" from Task model

    annotated_qs = DateRange.objects.all().annotate(
        task_count=Count('task', distinct=True)
    )
    assert not annotated_qs.filter(task_count__gt=1).exists()  # check if no DateRange has more than one task

    task_sub = Task.objects.filter(many_dateranges=OuterRef('pk'))[:1]  # select the Task linked to a DateRange
    DateRange.objects.update(
        task_fk=Subquery(
            task_sub.values('pk')
        )
    )


def reverse_func(apps, schema_editor):
    """Copy task_fk to an m2m relation between DateRange and Tasks"""
    Task = apps.get_model('agendjang', "Task")
    DateRange = apps.get_model('agendjang', "DateRange")
    ThroughModel = Task.many_dateranges.through

    qs = DateRange.objects.all().values('pk', 'task_fk').iterator()

    through_models = tuple(
        ThroughModel(daterange_id=daterange['pk'], task_id=daterange['task_fk'],)
        for daterange in qs
    )

    ThroughModel.objects.bulk_create(through_models)


class Migration(migrations.Migration):

    dependencies = [
        ('agendjang', '0003_remove_daterange_task_myset'),
    ]

    operations = [
        migrations.AddField(
            model_name='daterange',
            name='task_fk',  # temporary name
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='agendjang.task'),
            preserve_default=False,
        ),
        migrations.RunPython(forwards_func, reverse_func),
        migrations.RemoveField(
            model_name='task',
            name='many_dateranges',
        ),
        migrations.RenameField(  # avoid confusion between old reverse m2m and new fk
            model_name='daterange',
            old_name='task_fk',
            new_name='task',
        ),
        # set null to False, once every DateRange is linked to a Task
        migrations.AlterField(
            model_name='daterange',
            name='task',
            field=models.ForeignKey(null=False, on_delete=django.db.models.deletion.CASCADE, to='agendjang.task'),
        ),
    ]
